name: Build Cross-Platform Python App

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Get version from branch (Linux)
        if: matrix.os == 'ubuntu-latest'
        id: get_version_linux
        shell: bash
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "version=${BRANCH_NAME#v}" >> $GITHUB_OUTPUT

      - name: Get version from branch (Windows)
        if: matrix.os == 'windows-latest'
        id: get_version_win
        shell: pwsh
        run: |
          $branchName = "$env:GITHUB_REF".Split("/")[-1]
          echo "branch_name=$branchName" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          $version = $branchName -replace '^v', ''
          echo "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Build with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile main.py --name "KingGodCastleAIO-${{ steps.get_version_linux.outputs.version }}"

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile main.py --name "KingGodCastleAIO-${{ steps.get_version_win.outputs.version }}"

      - name: Upload artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: KingGodCastleAIO-ubuntu-${{ steps.get_version_linux.outputs.version }}
          path: dist/*

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: KingGodCastleAIO-windows-${{ steps.get_version_win.outputs.version }}
          path: dist/*

      - name: Merge to main branch
        if: github.ref != 'refs/heads/main' && success()
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git fetch origin main
          git checkout main
          git merge --no-ff ${{ github.ref_name }} -m "Auto-merge from build workflow"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
